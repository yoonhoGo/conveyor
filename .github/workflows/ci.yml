name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: macos-latest
    strategy:
      matrix:
        rust: [stable]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Run sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.10.0"

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: macos-${{ matrix.rust }}
          shared-key: "ci-cache"
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build plugins for tests
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: |
          cargo build -p conveyor-plugin-test
          cargo build -p conveyor-plugin-http
          cargo build -p conveyor-plugin-mongodb

      - name: Run tests
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo test --all-features --workspace

      - name: Run doctests
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo test --doc --workspace

      - name: Show sccache stats
        run: ${SCCACHE_PATH} --show-stats

  lint:
    name: Lint
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Run sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.10.0"

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-cache"
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo clippy --all-features --workspace -- -D warnings

      - name: Show sccache stats
        run: ${SCCACHE_PATH} --show-stats

  wasm-build:
    name: WASM Plugin Build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip2

      - name: Run sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.10.0"

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: wasm32-wasip2
          shared-key: "ci-cache"
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build WASM plugins
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: |
          cargo build -p conveyor-plugin-echo-wasm --target wasm32-wasip2 --release

      - name: Check WASM binary size
        run: |
          ls -lh target/wasm32-wasip2/release/*.wasm

      - name: Show sccache stats
        run: ${SCCACHE_PATH} --show-stats

  security-audit:
    name: Security Audit
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-cache"
          cache-on-failure: true

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Run security audit
        run: cargo audit
        continue-on-error: true  # Don't fail CI on security advisories

  coverage:
    name: Code Coverage
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Run sccache
        uses: mozilla-actions/sccache-action@v0.0.9
        with:
          version: "v0.10.0"

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-cache"
          cache-on-failure: true

      - name: Install tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin

      - name: Build plugins for coverage
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: |
          cargo build -p conveyor-plugin-test
          cargo build -p conveyor-plugin-http
          cargo build -p conveyor-plugin-mongodb

      - name: Generate coverage
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo tarpaulin --workspace --timeout 300 --out Xml
        continue-on-error: true  # Tarpaulin has issues with polars const evaluation

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./cobertura.xml
          fail_ci_if_error: false

      - name: Show sccache stats
        run: ${SCCACHE_PATH} --show-stats
