name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - name: linux-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: conveyor-linux-x64
          - name: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: conveyor-linux-arm64
          - name: macos-x64
            os: macos-latest
            target: x86_64-apple-darwin
            artifact: conveyor-darwin-x64
          - name: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            artifact: conveyor-darwin-arm64
          - name: windows-x64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: conveyor-win32-x64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Prepare artifact
        shell: bash
        run: |
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.platform.target }}/release/conveyor.exe ${{ matrix.platform.artifact }}
          else
            cp target/${{ matrix.platform.target }}/release/conveyor ${{ matrix.platform.artifact }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact }}
          path: ${{ matrix.platform.artifact }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    name: Publish to npm
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare binaries
        run: |
          mkdir -p bin
          # Copy all binaries to bin directory for npm package
          find artifacts -type f -exec cp {} bin/ \;
          ls -la bin/

      - name: Copy npm README
        run: cp NPM_README.md README.md

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
